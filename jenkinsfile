pipeline {
    agent any

    environment {
        PROJECT_VERSION = "1.0.${env.BUILD_NUMBER}"
    }

    stages {
        stage('Cleanup Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout Backend') {
            steps {
                git branch: 'oumaima', url: 'https://github.com/oumaimakhlifi/projet-DevOps.git'
            }
        }

        stage('Update Backend Version') {
            steps {
                sh "mvn versions:set -DnewVersion=${PROJECT_VERSION}"
            }
        }

        stage('Starting Containers') {
            steps {
                script {
                    sh "docker start 26f9e || echo 'Container 26f9e not found or already running'"
                    sh "docker start 1ea16 || echo 'Container 1ea16 not found or already running'"
                    sh "docker start c2298 || echo 'Container c2298 not found or already running'"
                }
            }
        }

        stage('Build Backend') {
            steps {
                sh "mvn clean package -DskipTests"
            }
        }

        stage('Test Backend') {
            steps {
                sh 'mvn clean test -X'
            }
        }

        stage('MVN SONARQUBE') {
            steps {
                sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=Omaima123456*'
            }
        }

        stage('Deploy Backend to Nexus') {
            steps {
                sh "mvn clean deploy -DskipTests"
            }
        }

        stage('Build Backend Docker Image') {
            steps {
                script {
                    sh "docker build -t oumaimakhelifi/projet-devops-app:${PROJECT_VERSION} ."
                }
            }
        }

        stage('Push Backend to Docker Hub') {
            steps {
                script {
                    // Login to Docker Hub and push backend image
                    withCredentials([string(credentialsId: 'dockerhub_pass', variable: 'DOCKER_PASSWORD')]) {
                        sh "echo \$DOCKER_PASSWORD | docker login -u oumaimakhelifi --password-stdin"
                        sh 'sleep 10'
                        sh "docker push oumaimakhelifi/projet-devops-app:${PROJECT_VERSION}"
                    }
                }
            }
        }

        stage('Docker Compose') {
            steps {
                sh 'docker compose up -d'
            }
        }

        stage('Checkout Frontend') {
            steps {
                git branch: 'oumaima', url: 'https://github.com/oumaimakhlifi/stationski.git'
            }
        }

        stage('Build Frontend Docker Image') {
            steps {
                script {
                    sh "docker build -t oumaimakhelifi/stationski-app-frontend:${PROJECT_VERSION} ."
                }
            }
        }
    }

    
}
